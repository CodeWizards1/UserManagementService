// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: GardenManagementService/gardenManagementService.proto

package GardenManagementService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// - POST /api/gardens --
// - GET /api/gardens/{id} --
// - PUT /api/gardens/{id} --
// - DELETE /api/gardens/{id} --
// - GET /api/users/{id}/gardens --
// - POST /api/gardens/{id}/plants --
// - GET /api/gardens/{id}/plants --
// - PUT /api/plants/{id} --
// - DELETE /api/plants/{id} --
// - POST /api/plants/{id}/care-logs
// - GET /api/plants/{id}/care-logs
type DoesGardenExistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *DoesGardenExistResponse) Reset() {
	*x = DoesGardenExistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoesGardenExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoesGardenExistResponse) ProtoMessage() {}

func (x *DoesGardenExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoesGardenExistResponse.ProtoReflect.Descriptor instead.
func (*DoesGardenExistResponse) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{0}
}

func (x *DoesGardenExistResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type IdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdRequest) Reset() {
	*x = IdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdRequest) ProtoMessage() {}

func (x *IdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdRequest.ProtoReflect.Descriptor instead.
func (*IdRequest) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{1}
}

func (x *IdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DateResponse) Reset() {
	*x = DateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateResponse) ProtoMessage() {}

func (x *DateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateResponse.ProtoReflect.Descriptor instead.
func (*DateResponse) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{2}
}

func (x *DateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GardenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type   string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Area   float32 `protobuf:"fixed32,4,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *GardenRequest) Reset() {
	*x = GardenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GardenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GardenRequest) ProtoMessage() {}

func (x *GardenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GardenRequest.ProtoReflect.Descriptor instead.
func (*GardenRequest) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{3}
}

func (x *GardenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GardenRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GardenRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GardenRequest) GetArea() float32 {
	if x != nil {
		return x.Area
	}
	return 0
}

type UpdateGardenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name   string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type   string  `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Area   float32 `protobuf:"fixed32,5,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *UpdateGardenRequest) Reset() {
	*x = UpdateGardenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGardenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGardenRequest) ProtoMessage() {}

func (x *UpdateGardenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGardenRequest.ProtoReflect.Descriptor instead.
func (*UpdateGardenRequest) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateGardenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGardenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateGardenRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateGardenRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateGardenRequest) GetArea() float32 {
	if x != nil {
		return x.Area
	}
	return 0
}

type Garden struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Garden) Reset() {
	*x = Garden{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Garden) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Garden) ProtoMessage() {}

func (x *Garden) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Garden.ProtoReflect.Descriptor instead.
func (*Garden) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{5}
}

type GardenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name      string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type      string  `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Area      float32 `protobuf:"fixed32,5,opt,name=area,proto3" json:"area,omitempty"`
	CreatedAt string  `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string  `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GardenResponse) Reset() {
	*x = GardenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GardenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GardenResponse) ProtoMessage() {}

func (x *GardenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GardenResponse.ProtoReflect.Descriptor instead.
func (*GardenResponse) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{6}
}

func (x *GardenResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GardenResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GardenResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GardenResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GardenResponse) GetArea() float32 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *GardenResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GardenResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Gardens struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gardens []*GardenResponse `protobuf:"bytes,1,rep,name=gardens,proto3" json:"gardens,omitempty"`
}

func (x *Gardens) Reset() {
	*x = Gardens{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gardens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gardens) ProtoMessage() {}

func (x *Gardens) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gardens.ProtoReflect.Descriptor instead.
func (*Gardens) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{7}
}

func (x *Gardens) GetGardens() []*GardenResponse {
	if x != nil {
		return x.Gardens
	}
	return nil
}

type PlantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GardenId string `protobuf:"bytes,1,opt,name=garden_id,json=gardenId,proto3" json:"garden_id,omitempty"`
	Species  string `protobuf:"bytes,2,opt,name=species,proto3" json:"species,omitempty"`
	Quantity int64  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Status   string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PlantRequest) Reset() {
	*x = PlantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlantRequest) ProtoMessage() {}

func (x *PlantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlantRequest.ProtoReflect.Descriptor instead.
func (*PlantRequest) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{8}
}

func (x *PlantRequest) GetGardenId() string {
	if x != nil {
		return x.GardenId
	}
	return ""
}

func (x *PlantRequest) GetSpecies() string {
	if x != nil {
		return x.Species
	}
	return ""
}

func (x *PlantRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PlantRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PlantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GardenId     string `protobuf:"bytes,2,opt,name=garden_id,json=gardenId,proto3" json:"garden_id,omitempty"`
	Species      string `protobuf:"bytes,3,opt,name=species,proto3" json:"species,omitempty"`
	Quantity     int64  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PlantingDate string `protobuf:"bytes,5,opt,name=planting_date,json=plantingDate,proto3" json:"planting_date,omitempty"`
	Status       string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt    string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    string `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PlantResponse) Reset() {
	*x = PlantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlantResponse) ProtoMessage() {}

func (x *PlantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlantResponse.ProtoReflect.Descriptor instead.
func (*PlantResponse) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{9}
}

func (x *PlantResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlantResponse) GetGardenId() string {
	if x != nil {
		return x.GardenId
	}
	return ""
}

func (x *PlantResponse) GetSpecies() string {
	if x != nil {
		return x.Species
	}
	return ""
}

func (x *PlantResponse) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PlantResponse) GetPlantingDate() string {
	if x != nil {
		return x.PlantingDate
	}
	return ""
}

func (x *PlantResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PlantResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PlantResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Plants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plants []*PlantResponse `protobuf:"bytes,1,rep,name=plants,proto3" json:"plants,omitempty"`
}

func (x *Plants) Reset() {
	*x = Plants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plants) ProtoMessage() {}

func (x *Plants) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plants.ProtoReflect.Descriptor instead.
func (*Plants) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{10}
}

func (x *Plants) GetPlants() []*PlantResponse {
	if x != nil {
		return x.Plants
	}
	return nil
}

type CareLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlantId  string `protobuf:"bytes,1,opt,name=plant_id,json=plantId,proto3" json:"plant_id,omitempty"`
	Action   string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Notes    string `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty"`
	LoggedAt string `protobuf:"bytes,4,opt,name=logged_at,json=loggedAt,proto3" json:"logged_at,omitempty"`
}

func (x *CareLogs) Reset() {
	*x = CareLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CareLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CareLogs) ProtoMessage() {}

func (x *CareLogs) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CareLogs.ProtoReflect.Descriptor instead.
func (*CareLogs) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{11}
}

func (x *CareLogs) GetPlantId() string {
	if x != nil {
		return x.PlantId
	}
	return ""
}

func (x *CareLogs) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *CareLogs) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *CareLogs) GetLoggedAt() string {
	if x != nil {
		return x.LoggedAt
	}
	return ""
}

type CareLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlantId  string `protobuf:"bytes,2,opt,name=plant_id,json=plantId,proto3" json:"plant_id,omitempty"`
	Action   string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Notes    string `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	LoggedAt string `protobuf:"bytes,5,opt,name=logged_at,json=loggedAt,proto3" json:"logged_at,omitempty"`
}

func (x *CareLogsResponse) Reset() {
	*x = CareLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CareLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CareLogsResponse) ProtoMessage() {}

func (x *CareLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CareLogsResponse.ProtoReflect.Descriptor instead.
func (*CareLogsResponse) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{12}
}

func (x *CareLogsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CareLogsResponse) GetPlantId() string {
	if x != nil {
		return x.PlantId
	}
	return ""
}

func (x *CareLogsResponse) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *CareLogsResponse) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *CareLogsResponse) GetLoggedAt() string {
	if x != nil {
		return x.LoggedAt
	}
	return ""
}

type CareLogsByPlantID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CareLogs []*CareLogsResponse `protobuf:"bytes,1,rep,name=care_logs,json=careLogs,proto3" json:"care_logs,omitempty"`
}

func (x *CareLogsByPlantID) Reset() {
	*x = CareLogsByPlantID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CareLogsByPlantID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CareLogsByPlantID) ProtoMessage() {}

func (x *CareLogsByPlantID) ProtoReflect() protoreflect.Message {
	mi := &file_GardenManagementService_gardenManagementService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CareLogsByPlantID.ProtoReflect.Descriptor instead.
func (*CareLogsByPlantID) Descriptor() ([]byte, []int) {
	return file_GardenManagementService_gardenManagementService_proto_rawDescGZIP(), []int{13}
}

func (x *CareLogsByPlantID) GetCareLogs() []*CareLogsResponse {
	if x != nil {
		return x.CareLogs
	}
	return nil
}

var File_GardenManagementService_gardenManagementService_proto protoreflect.FileDescriptor

var file_GardenManagementService_gardenManagementService_proto_rawDesc = []byte{
	0x0a, 0x35, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x31, 0x0a, 0x17, 0x44, 0x6f, 0x65, 0x73, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x22, 0x1b, 0x0a, 0x09, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x28, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x64, 0x0a, 0x0d, 0x47, 0x61,
	0x72, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x22, 0x7a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0x08, 0x0a, 0x06,
	0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x22, 0xb3, 0x01, 0x0a, 0x0e, 0x47, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4c, 0x0a, 0x07,
	0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x67, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x73, 0x22, 0x79, 0x0a, 0x0c, 0x50, 0x6c,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61,
	0x72, 0x64, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x61, 0x72, 0x64, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xed, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x72, 0x64,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x48, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x12,
	0x3e, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x22,
	0x70, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5b, 0x0a, 0x11,
	0x43, 0x61, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x46, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x61, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x63, 0x61, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x32, 0xdf, 0x09, 0x0a, 0x17, 0x47, 0x61,
	0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x0f, 0x44, 0x6f, 0x65, 0x73, 0x47, 0x61, 0x72,
	0x64, 0x65, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x47,
	0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x65, 0x73, 0x47, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x61, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e,
	0x12, 0x26, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x72,
	0x64, 0x65, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2c, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5f, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x47, 0x61,
	0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x73, 0x22, 0x00, 0x12,
	0x68, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x42, 0x79,
	0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x49, 0x44,
	0x12, 0x22, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x6c, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x49, 0x44,
	0x12, 0x25, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x42, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x47, 0x61, 0x72,
	0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x21, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x65,
	0x4c, 0x6f, 0x67, 0x73, 0x1a, 0x29, 0x2e, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x61, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x68, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73,
	0x42, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x47, 0x61, 0x72, 0x64,
	0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73,
	0x42, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x00, 0x42, 0x22, 0x5a, 0x20, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x47, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GardenManagementService_gardenManagementService_proto_rawDescOnce sync.Once
	file_GardenManagementService_gardenManagementService_proto_rawDescData = file_GardenManagementService_gardenManagementService_proto_rawDesc
)

func file_GardenManagementService_gardenManagementService_proto_rawDescGZIP() []byte {
	file_GardenManagementService_gardenManagementService_proto_rawDescOnce.Do(func() {
		file_GardenManagementService_gardenManagementService_proto_rawDescData = protoimpl.X.CompressGZIP(file_GardenManagementService_gardenManagementService_proto_rawDescData)
	})
	return file_GardenManagementService_gardenManagementService_proto_rawDescData
}

var file_GardenManagementService_gardenManagementService_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_GardenManagementService_gardenManagementService_proto_goTypes = []any{
	(*DoesGardenExistResponse)(nil), // 0: GardenManagementService.DoesGardenExistResponse
	(*IdRequest)(nil),               // 1: GardenManagementService.IdRequest
	(*DateResponse)(nil),            // 2: GardenManagementService.DateResponse
	(*GardenRequest)(nil),           // 3: GardenManagementService.GardenRequest
	(*UpdateGardenRequest)(nil),     // 4: GardenManagementService.UpdateGardenRequest
	(*Garden)(nil),                  // 5: GardenManagementService.Garden
	(*GardenResponse)(nil),          // 6: GardenManagementService.GardenResponse
	(*Gardens)(nil),                 // 7: GardenManagementService.Gardens
	(*PlantRequest)(nil),            // 8: GardenManagementService.PlantRequest
	(*PlantResponse)(nil),           // 9: GardenManagementService.PlantResponse
	(*Plants)(nil),                  // 10: GardenManagementService.Plants
	(*CareLogs)(nil),                // 11: GardenManagementService.CareLogs
	(*CareLogsResponse)(nil),        // 12: GardenManagementService.CareLogsResponse
	(*CareLogsByPlantID)(nil),       // 13: GardenManagementService.CareLogsByPlantID
}
var file_GardenManagementService_gardenManagementService_proto_depIdxs = []int32{
	6,  // 0: GardenManagementService.Gardens.gardens:type_name -> GardenManagementService.GardenResponse
	9,  // 1: GardenManagementService.Plants.plants:type_name -> GardenManagementService.PlantResponse
	12, // 2: GardenManagementService.CareLogsByPlantID.care_logs:type_name -> GardenManagementService.CareLogsResponse
	1,  // 3: GardenManagementService.GardenManagementService.DoesGardenExist:input_type -> GardenManagementService.IdRequest
	3,  // 4: GardenManagementService.GardenManagementService.CreateGarden:input_type -> GardenManagementService.GardenRequest
	1,  // 5: GardenManagementService.GardenManagementService.GetGardenByID:input_type -> GardenManagementService.IdRequest
	4,  // 6: GardenManagementService.GardenManagementService.UpdateGardenByID:input_type -> GardenManagementService.UpdateGardenRequest
	1,  // 7: GardenManagementService.GardenManagementService.DeleteGardenByID:input_type -> GardenManagementService.IdRequest
	1,  // 8: GardenManagementService.GardenManagementService.GetGardensByUserID:input_type -> GardenManagementService.IdRequest
	8,  // 9: GardenManagementService.GardenManagementService.CreatePlantByGardenID:input_type -> GardenManagementService.PlantRequest
	1,  // 10: GardenManagementService.GardenManagementService.GetPlantsByGardenID:input_type -> GardenManagementService.IdRequest
	8,  // 11: GardenManagementService.GardenManagementService.UpdatePlantByPlantsID:input_type -> GardenManagementService.PlantRequest
	1,  // 12: GardenManagementService.GardenManagementService.DeletePlantByPlantsID:input_type -> GardenManagementService.IdRequest
	11, // 13: GardenManagementService.GardenManagementService.CreateCareLogByPlantID:input_type -> GardenManagementService.CareLogs
	1,  // 14: GardenManagementService.GardenManagementService.GetCareLogsByPlantID:input_type -> GardenManagementService.IdRequest
	0,  // 15: GardenManagementService.GardenManagementService.DoesGardenExist:output_type -> GardenManagementService.DoesGardenExistResponse
	6,  // 16: GardenManagementService.GardenManagementService.CreateGarden:output_type -> GardenManagementService.GardenResponse
	6,  // 17: GardenManagementService.GardenManagementService.GetGardenByID:output_type -> GardenManagementService.GardenResponse
	6,  // 18: GardenManagementService.GardenManagementService.UpdateGardenByID:output_type -> GardenManagementService.GardenResponse
	2,  // 19: GardenManagementService.GardenManagementService.DeleteGardenByID:output_type -> GardenManagementService.DateResponse
	7,  // 20: GardenManagementService.GardenManagementService.GetGardensByUserID:output_type -> GardenManagementService.Gardens
	9,  // 21: GardenManagementService.GardenManagementService.CreatePlantByGardenID:output_type -> GardenManagementService.PlantResponse
	10, // 22: GardenManagementService.GardenManagementService.GetPlantsByGardenID:output_type -> GardenManagementService.Plants
	9,  // 23: GardenManagementService.GardenManagementService.UpdatePlantByPlantsID:output_type -> GardenManagementService.PlantResponse
	2,  // 24: GardenManagementService.GardenManagementService.DeletePlantByPlantsID:output_type -> GardenManagementService.DateResponse
	12, // 25: GardenManagementService.GardenManagementService.CreateCareLogByPlantID:output_type -> GardenManagementService.CareLogsResponse
	13, // 26: GardenManagementService.GardenManagementService.GetCareLogsByPlantID:output_type -> GardenManagementService.CareLogsByPlantID
	15, // [15:27] is the sub-list for method output_type
	3,  // [3:15] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_GardenManagementService_gardenManagementService_proto_init() }
func file_GardenManagementService_gardenManagementService_proto_init() {
	if File_GardenManagementService_gardenManagementService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GardenManagementService_gardenManagementService_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DoesGardenExistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*IdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GardenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateGardenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Garden); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GardenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Gardens); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PlantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PlantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Plants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CareLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CareLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GardenManagementService_gardenManagementService_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CareLogsByPlantID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GardenManagementService_gardenManagementService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_GardenManagementService_gardenManagementService_proto_goTypes,
		DependencyIndexes: file_GardenManagementService_gardenManagementService_proto_depIdxs,
		MessageInfos:      file_GardenManagementService_gardenManagementService_proto_msgTypes,
	}.Build()
	File_GardenManagementService_gardenManagementService_proto = out.File
	file_GardenManagementService_gardenManagementService_proto_rawDesc = nil
	file_GardenManagementService_gardenManagementService_proto_goTypes = nil
	file_GardenManagementService_gardenManagementService_proto_depIdxs = nil
}
